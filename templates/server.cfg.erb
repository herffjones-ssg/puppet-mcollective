topicprefix = /topic/
main_collective = mcollective
collectives = mcollective
libdir = <%= @mcollective_libdir %>
logfile = /var/log/mcollective.log
loglevel = info
daemonize = <%= @mcollective_daemonize %>

# Plugins
securityprovider = <%= @security_provider %>
<% if @security_provider == 'psk' %>
plugin.psk = <%= @security_secret %>
<% end %>
<% if @security_provider == 'ssl' %>
plugin.ssl_server_private = <%= @security_ssl_private %>
plugin.ssl_server_public = <%= @security_ssl_public %>
plugin.ssl_client_cert_dir = /etc/mcollective/ssl/clients/
<% end %>

connector = <%= @connector %>
<% if @connector == 'rabbitmq' %>
plugin.rabbitmq.vhost = <%= @broker_vhost %>
<% end %>
plugin.<%= @connector %>.pool.size = 1
plugin.<%= @connector %>.pool.host1 = <%= @broker_host %>
plugin.<%= @connector %>.pool.port1 = <%= @broker_port %>
plugin.<%= @connector %>.pool.user1 = <%= @broker_user %>
plugin.<%= @connector %>.pool.password1 = <%= @broker_password %>
plugin.<%= @connector %>.pool.ssl1 = <%= @broker_ssl %>
<% if @broker_ssl %>
plugin.<%= @connector %>.pool.ssl.cert1 = <%= @broker_ssl_cert %>
plugin.<%= @connector %>.pool.ssl.key1 = <%= @broker_ssl_key %>
plugin.<%= @connector %>.pool.ssl.ca1 = <%= @broker_ssl_ca %>
<% end %>

<% if @rpcauthorization %>
# Authorization
rpcauthorization = 1
rpcauthprovider = <%= @rpcauthprovider %>
<% if @rpcauthprovider == 'action_policy' %>
plugin.actionpolicy.allow_unconfigured = <%= @rpcauth_allow_unconfigured %>
plugin.actionpolicy.enable_default = <%= @rpcauth_enable_default %>
<%- end %>
<%- end %>

plugin.puppetca.cadir = <%= @puppetca_cadir %>

<% if scope.lookupvar('mcollective::role::real_resource_type_whitelist') %>plugin.puppet.resource_type_whitelist = <%= scope.lookupvar('mcollective::role::real_resource_type_whitelist') %><% end -%>

# Facts
factsource = yaml
plugin.yaml = /etc/mcollective/facter_generated.yaml:/etc/mcollective/facts.yaml

classesfile = /var/lib/puppet/classes.txt

registerinterval = 300
registration = Agentlist

